// Copyright (c) 2015, the Dart GL extension authors. All rights reserved.
// Please see the AUTHORS file for details. Use of this source code is governed
// by a BSD-style license that can be found in the LICENSE file or at
// https://developers.google.com/open-source/licenses/bsd

// This file is auto-generated by scripts in the tools/ directory.

/// Dart definitions for GL native extension.
part of gl;

void glActiveTexture(int texture) native "glActiveTexture";
void glAttachShader(int program, int shader) native "glAttachShader";
void glBindAttribLocation(int program, int index, String name)
    native "glBindAttribLocation";
void glBindBuffer(int target, int buffer) native "glBindBuffer";
void glBindFramebuffer(int target, int framebuffer) native "glBindFramebuffer";
void glBindRenderbuffer(int target, int renderbuffer)
    native "glBindRenderbuffer";
void glBindTexture(int target, int texture) native "glBindTexture";
void glBlendColor(double red, double green, double blue, double alpha)
    native "glBlendColor";
void glBlendEquation(int mode) native "glBlendEquation";
void glBlendEquationSeparate(int modeRGB, int modeAlpha)
    native "glBlendEquationSeparate";
void glBlendFunc(int sfactor, int dfactor) native "glBlendFunc";
void glBlendFuncSeparate(int srcRGB, int dstRGB, int srcAlpha, int dstAlpha)
    native "glBlendFuncSeparate";
void glBufferData(int target, int size, TypedData data, int usage)
    native "glBufferData";
void glBufferSubData(int target, int offset, int size, TypedData data)
    native "glBufferSubData";
int glCheckFramebufferStatus(int target) native "glCheckFramebufferStatus";
void glClear(int mask) native "glClear";
void glClearColor(double red, double green, double blue, double alpha)
    native "glClearColor";
void glClearDepthf(double depth) native "glClearDepthf";
void glClearStencil(int s) native "glClearStencil";
void glColorMask(int red, int green, int blue, int alpha) native "glColorMask";
void glCompileShader(int shader) native "glCompileShader";
void glCompressedTexImage2D(
    int target,
    int level,
    int internalformat,
    int width,
    int height,
    int border,
    int imageSize,
    TypedData data) native "glCompressedTexImage2D";
void glCompressedTexSubImage2D(
    int target,
    int level,
    int xoffset,
    int yoffset,
    int width,
    int height,
    int format,
    int imageSize,
    TypedData data) native "glCompressedTexSubImage2D";
void glCopyTexImage2D(int target, int level, int internalformat, int x, int y,
    int width, int height, int border) native "glCopyTexImage2D";
void glCopyTexSubImage2D(int target, int level, int xoffset, int yoffset, int x,
    int y, int width, int height) native "glCopyTexSubImage2D";
int glCreateProgram() native "glCreateProgram";
int glCreateShader(int type) native "glCreateShader";
void glCullFace(int mode) native "glCullFace";
void glDeleteProgram(int program) native "glDeleteProgram";
void glDeleteShader(int shader) native "glDeleteShader";
void glDepthFunc(int func) native "glDepthFunc";
void glDepthMask(int flag) native "glDepthMask";
void glDepthRangef(double zNear, double zFar) native "glDepthRangef";
void glDetachShader(int program, int shader) native "glDetachShader";
void glDisable(int cap) native "glDisable";
void glDisableVertexAttribArray(int index) native "glDisableVertexAttribArray";
void glDrawArrays(int mode, int first, int count) native "glDrawArrays";
void glDrawElements(int mode, int count, int type, TypedData indices)
    native "glDrawElements";
void glEnable(int cap) native "glEnable";
void glEnableVertexAttribArray(int index) native "glEnableVertexAttribArray";
void glFinish() native "glFinish";
void glFlush() native "glFlush";
void glFramebufferRenderbuffer(
    int target,
    int attachment,
    int renderbuffertarget,
    int renderbuffer) native "glFramebufferRenderbuffer";
void glFramebufferTexture2D(int target, int attachment, int textarget,
    int texture, int level) native "glFramebufferTexture2D";
void glFrontFace(int mode) native "glFrontFace";
void glGenerateMipmap(int target) native "glGenerateMipmap";
int glGetAttribLocation(int program, String name) native "glGetAttribLocation";
int glGetError() native "glGetError";
String glGetString(int name) native "glGetString";
int glGetUniformLocation(int program, String name)
    native "glGetUniformLocation";
void glHint(int target, int mode) native "glHint";
bool glIsBuffer(int buffer) native "glIsBuffer";
bool glIsEnabled(int cap) native "glIsEnabled";
bool glIsFramebuffer(int framebuffer) native "glIsFramebuffer";
bool glIsProgram(int program) native "glIsProgram";
bool glIsRenderbuffer(int renderbuffer) native "glIsRenderbuffer";
bool glIsShader(int shader) native "glIsShader";
bool glIsTexture(int texture) native "glIsTexture";
void glLineWidth(double width) native "glLineWidth";
void glLinkProgram(int program) native "glLinkProgram";
void glPixelStorei(int pname, int param) native "glPixelStorei";
void glPolygonOffset(double factor, double units) native "glPolygonOffset";
void glReleaseShaderCompiler() native "glReleaseShaderCompiler";
void glRenderbufferStorage(int target, int internalformat, int width,
    int height) native "glRenderbufferStorage";
void glSampleCoverage(double value, int invert) native "glSampleCoverage";
void glScissor(int x, int y, int width, int height) native "glScissor";
void glStencilFunc(int func, int ref, int mask) native "glStencilFunc";
void glStencilFuncSeparate(int face, int func, int ref, int mask)
    native "glStencilFuncSeparate";
void glStencilMask(int mask) native "glStencilMask";
void glStencilMaskSeparate(int face, int mask) native "glStencilMaskSeparate";
void glStencilOp(int fail, int zfail, int zpass) native "glStencilOp";
void glStencilOpSeparate(int face, int fail, int zfail, int zpass)
    native "glStencilOpSeparate";
void glTexImage2D(
    int target,
    int level,
    int internalformat,
    int width,
    int height,
    int border,
    int format,
    int type,
    TypedData pixels) native "glTexImage2D";
void glTexParameterf(int target, int pname, double param)
    native "glTexParameterf";
void glTexParameteri(int target, int pname, int param) native "glTexParameteri";
void glTexSubImage2D(
    int target,
    int level,
    int xoffset,
    int yoffset,
    int width,
    int height,
    int format,
    int type,
    TypedData pixels) native "glTexSubImage2D";
void glUniform1f(int location, double x) native "glUniform1f";
void glUniform1fv(int location, int count, TypedData v) native "glUniform1fv";
void glUniform1i(int location, int x) native "glUniform1i";
void glUniform1iv(int location, int count, TypedData v) native "glUniform1iv";
void glUniform2f(int location, double x, double y) native "glUniform2f";
void glUniform2fv(int location, int count, TypedData v) native "glUniform2fv";
void glUniform2i(int location, int x, int y) native "glUniform2i";
void glUniform2iv(int location, int count, TypedData v) native "glUniform2iv";
void glUniform3f(int location, double x, double y, double z)
    native "glUniform3f";
void glUniform3fv(int location, int count, TypedData v) native "glUniform3fv";
void glUniform3i(int location, int x, int y, int z) native "glUniform3i";
void glUniform3iv(int location, int count, TypedData v) native "glUniform3iv";
void glUniform4f(int location, double x, double y, double z, double w)
    native "glUniform4f";
void glUniform4fv(int location, int count, TypedData v) native "glUniform4fv";
void glUniform4i(int location, int x, int y, int z, int w) native "glUniform4i";
void glUniform4iv(int location, int count, TypedData v) native "glUniform4iv";
void glUniformMatrix2fv(int location, int count, int transpose, TypedData value)
    native "glUniformMatrix2fv";
void glUniformMatrix3fv(int location, int count, int transpose, TypedData value)
    native "glUniformMatrix3fv";
void glUniformMatrix4fv(int location, int count, int transpose, TypedData value)
    native "glUniformMatrix4fv";
void glUseProgram(int program) native "glUseProgram";
void glValidateProgram(int program) native "glValidateProgram";
void glVertexAttrib1f(int indx, double x) native "glVertexAttrib1f";
void glVertexAttrib1fv(int indx, TypedData values) native "glVertexAttrib1fv";
void glVertexAttrib2f(int indx, double x, double y) native "glVertexAttrib2f";
void glVertexAttrib2fv(int indx, TypedData values) native "glVertexAttrib2fv";
void glVertexAttrib3f(int indx, double x, double y, double z)
    native "glVertexAttrib3f";
void glVertexAttrib3fv(int indx, TypedData values) native "glVertexAttrib3fv";
void glVertexAttrib4f(int indx, double x, double y, double z, double w)
    native "glVertexAttrib4f";
void glVertexAttrib4fv(int indx, TypedData values) native "glVertexAttrib4fv";
void glViewport(int x, int y, int width, int height) native "glViewport";
